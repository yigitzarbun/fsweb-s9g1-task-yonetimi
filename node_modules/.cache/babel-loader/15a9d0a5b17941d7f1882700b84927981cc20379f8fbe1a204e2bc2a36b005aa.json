{"ast":null,"code":"var _jsxFileName = \"/Users/yigitzarbun/Desktop/Workintech/sprint_9/s9g1/fsweb-s9g1-task-yonetimi/src/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formSemasi = Yup.object().shape({\n  title: Yup.string().required(\"Task başlığı yazmalısınız\").min(3, \"Task başlığı en az 3 karakter olmalı\"),\n  description: Yup.string().required(\"Task açıklaması yazmalısınız\").min(10, \"Task açıklaması en az 10 karakter olmalı\"),\n  people: Yup.array().max(3, \"En fazla 3 kişi seçebilirsiniz\").min(1, \"Lütfen en az bir kişi seçin\")\n});\nconst TaskForm = _ref => {\n  _s();\n  let {\n    kisiler,\n    submitFn\n  } = _ref;\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    people: []\n  });\n\n  // yup error stateleri\n  const [formErrors, setFormErrors] = useState({\n    title: \"\",\n    description: \"\",\n    people: \"\"\n  });\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n\n  // form datası her güncellendiğinde valid mi diye kontrol et\n  useEffect(() => {\n    formSemasi.isValid(formData).then(valid => setButtonDisabled(!valid));\n  }, [formData]);\n\n  // yup form alani her değiştiğinde çalışan kontrol fonksiyonu\n  function formAlaniniKontrolEt(name, value) {\n    Yup.reach(formSemasi, name).validate(value).then(() => {\n      setFormErrors({\n        ...formErrors,\n        [name]: \"\"\n      });\n    }).catch(err => {\n      setFormErrors({\n        ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n  }\n\n  // checkboxların değişimini state içerisine eklemek için özel fonksiyon\n  function handleCheckboxChange(e) {\n    const {\n      value\n    } = e.target;\n    let yeniPeople = [...formData.people];\n    const index = formData.people.indexOf(value);\n    if (index > -1) {\n      yeniPeople.splice(index, 1);\n    } else {\n      yeniPeople.push(value);\n    }\n    formAlaniniKontrolEt(\"people\", yeniPeople);\n    setFormData({\n      ...formData,\n      people: yeniPeople\n    });\n  }\n\n  // diğer form alanları değiştikçe çalışan ve yeni değeri state'e ekleyen fonksiyon\n  function handleOthersChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    formAlaniniKontrolEt(name, value);\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  }\n\n  // task ekleme\n  function handleSubmit(e) {\n    e.preventDefault();\n    submitFn({\n      ...formData,\n      id: nanoid(5),\n      status: \"yapılacak\"\n    });\n    setFormData({\n      title: \"\",\n      description: \"\",\n      people: []\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"taskForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"title\",\n        children: \"Ba\\u015Fl\\u0131k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-text\",\n        id: \"title\",\n        name: \"title\",\n        type: \"text\",\n        onChange: handleOthersChange,\n        value: formData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: formErrors.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"description\",\n        children: \"A\\xE7\\u0131klama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-textarea\",\n        rows: \"3\",\n        id: \"description\",\n        name: \"description\",\n        onChange: handleOthersChange,\n        value: formData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: formErrors.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"\\u0130nsanlar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: kisiler.map(p => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"people\",\n            value: p,\n            onChange: handleCheckboxChange,\n            checked: formData.people.includes(p)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), p]\n        }, p, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: formErrors.people\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        disabled: buttonDisabled,\n        children: \"Kaydet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"R+sFIXHOq9UOYHRhhOWc0uhmAPc=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","nanoid","Yup","formSemasi","object","shape","title","string","required","min","description","people","array","max","TaskForm","kisiler","submitFn","formData","setFormData","formErrors","setFormErrors","buttonDisabled","setButtonDisabled","isValid","then","valid","formAlaniniKontrolEt","name","value","reach","validate","catch","err","errors","handleCheckboxChange","e","target","yeniPeople","index","indexOf","splice","push","handleOthersChange","handleSubmit","preventDefault","id","status","map","p","includes"],"sources":["/Users/yigitzarbun/Desktop/Workintech/sprint_9/s9g1/fsweb-s9g1-task-yonetimi/src/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport * as Yup from \"yup\";\n\nconst formSemasi = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Task başlığı yazmalısınız\")\n    .min(3, \"Task başlığı en az 3 karakter olmalı\"),\n  description: Yup.string()\n    .required(\"Task açıklaması yazmalısınız\")\n    .min(10, \"Task açıklaması en az 10 karakter olmalı\"),\n  people: Yup.array()\n    .max(3, \"En fazla 3 kişi seçebilirsiniz\")\n    .min(1, \"Lütfen en az bir kişi seçin\"),\n});\n\nconst TaskForm = ({ kisiler, submitFn }) => {\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    people: [],\n  });\n\n  // yup error stateleri\n  const [formErrors, setFormErrors] = useState({\n    title: \"\",\n    description: \"\",\n    people: \"\",\n  });\n\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n\n  // form datası her güncellendiğinde valid mi diye kontrol et\n  useEffect(() => {\n    formSemasi.isValid(formData).then((valid) => setButtonDisabled(!valid));\n  }, [formData]);\n\n  // yup form alani her değiştiğinde çalışan kontrol fonksiyonu\n  function formAlaniniKontrolEt(name, value) {\n    Yup.reach(formSemasi, name)\n      .validate(value)\n      .then(() => {\n        setFormErrors({\n          ...formErrors,\n          [name]: \"\",\n        });\n      })\n      .catch((err) => {\n        setFormErrors({\n          ...formErrors,\n          [name]: err.errors[0],\n        });\n      });\n  }\n\n  // checkboxların değişimini state içerisine eklemek için özel fonksiyon\n  function handleCheckboxChange(e) {\n    const { value } = e.target;\n\n    let yeniPeople = [...formData.people];\n    const index = formData.people.indexOf(value);\n    if (index > -1) {\n      yeniPeople.splice(index, 1);\n    } else {\n      yeniPeople.push(value);\n    }\n\n    formAlaniniKontrolEt(\"people\", yeniPeople);\n    setFormData({\n      ...formData,\n      people: yeniPeople,\n    });\n  }\n\n\n  // diğer form alanları değiştikçe çalışan ve yeni değeri state'e ekleyen fonksiyon\n  function handleOthersChange(e) {\n    const { name, value } = e.target;\n    formAlaniniKontrolEt(name, value);\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  }\n\n  // task ekleme\n  function handleSubmit(e) {\n    e.preventDefault();\n    submitFn({\n      ...formData,\n      id: nanoid(5),\n      status: \"yapılacak\",\n    });\n    setFormData({\n      title: \"\",\n      description: \"\",\n      people: [],\n    });\n  }\n\n  return (\n    <form className=\"taskForm\" onSubmit={handleSubmit}>\n      <div className=\"form-line\">\n        <label className=\"input-label\" htmlFor=\"title\">\n          Başlık\n        </label>\n        <input\n          className=\"input-text\"\n          id=\"title\"\n          name=\"title\"\n          type=\"text\"\n          onChange={handleOthersChange}\n          value={formData.title}\n        />\n        <p className=\"input-error\">{formErrors.title}</p>\n      </div>\n\n      <div className=\"form-line\">\n        <label className=\"input-label\" htmlFor=\"description\">\n          Açıklama\n        </label>\n        <textarea\n          className=\"input-textarea\"\n          rows=\"3\"\n          id=\"description\"\n          name=\"description\"\n          onChange={handleOthersChange}\n          value={formData.description}\n        ></textarea>\n        <p className=\"input-error\">{formErrors.description}</p>\n      </div>\n\n      <div className=\"form-line\">\n        <label className=\"input-label\">İnsanlar</label>\n        <div>\n          {kisiler.map((p) => (\n            <label className=\"input-checkbox\" key={p}>\n              <input\n                type=\"checkbox\"\n                name=\"people\"\n                value={p}\n                onChange={handleCheckboxChange}\n                checked={formData.people.includes(p)}\n              />\n              {p}\n            </label>\n          ))}\n        </div>\n        <p className=\"input-error\">{formErrors.people}</p>\n      </div>\n\n      <div className=\"form-line\">\n        <button\n          className=\"submit-button\"\n          type=\"submit\"\n          disabled={buttonDisabled}\n        >\n          Kaydet\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default TaskForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC;AAE3B,MAAMC,UAAU,GAAGD,GAAG,CAACE,MAAM,EAAE,CAACC,KAAK,CAAC;EACpCC,KAAK,EAAEJ,GAAG,CAACK,MAAM,EAAE,CAChBC,QAAQ,CAAC,2BAA2B,CAAC,CACrCC,GAAG,CAAC,CAAC,EAAE,sCAAsC,CAAC;EACjDC,WAAW,EAAER,GAAG,CAACK,MAAM,EAAE,CACtBC,QAAQ,CAAC,8BAA8B,CAAC,CACxCC,GAAG,CAAC,EAAE,EAAE,0CAA0C,CAAC;EACtDE,MAAM,EAAET,GAAG,CAACU,KAAK,EAAE,CAChBC,GAAG,CAAC,CAAC,EAAE,gCAAgC,CAAC,CACxCJ,GAAG,CAAC,CAAC,EAAE,6BAA6B;AACzC,CAAC,CAAC;AAEF,MAAMK,QAAQ,GAAG,QAA2B;EAAA;EAAA,IAA1B;IAAEC,OAAO;IAAEC;EAAS,CAAC;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC;IACvCO,KAAK,EAAE,EAAE;IACTI,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE;EACV,CAAC,CAAC;;EAEF;EACA,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC;IAC3CO,KAAK,EAAE,EAAE;IACTI,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACAC,SAAS,CAAC,MAAM;IACdG,UAAU,CAACoB,OAAO,CAACN,QAAQ,CAAC,CAACO,IAAI,CAAEC,KAAK,IAAKH,iBAAiB,CAAC,CAACG,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;;EAEd;EACA,SAASS,oBAAoB,CAACC,IAAI,EAAEC,KAAK,EAAE;IACzC1B,GAAG,CAAC2B,KAAK,CAAC1B,UAAU,EAAEwB,IAAI,CAAC,CACxBG,QAAQ,CAACF,KAAK,CAAC,CACfJ,IAAI,CAAC,MAAM;MACVJ,aAAa,CAAC;QACZ,GAAGD,UAAU;QACb,CAACQ,IAAI,GAAG;MACV,CAAC,CAAC;IACJ,CAAC,CAAC,CACDI,KAAK,CAAEC,GAAG,IAAK;MACdZ,aAAa,CAAC;QACZ,GAAGD,UAAU;QACb,CAACQ,IAAI,GAAGK,GAAG,CAACC,MAAM,CAAC,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;;EAEA;EACA,SAASC,oBAAoB,CAACC,CAAC,EAAE;IAC/B,MAAM;MAAEP;IAAM,CAAC,GAAGO,CAAC,CAACC,MAAM;IAE1B,IAAIC,UAAU,GAAG,CAAC,GAAGpB,QAAQ,CAACN,MAAM,CAAC;IACrC,MAAM2B,KAAK,GAAGrB,QAAQ,CAACN,MAAM,CAAC4B,OAAO,CAACX,KAAK,CAAC;IAC5C,IAAIU,KAAK,GAAG,CAAC,CAAC,EAAE;MACdD,UAAU,CAACG,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC7B,CAAC,MAAM;MACLD,UAAU,CAACI,IAAI,CAACb,KAAK,CAAC;IACxB;IAEAF,oBAAoB,CAAC,QAAQ,EAAEW,UAAU,CAAC;IAC1CnB,WAAW,CAAC;MACV,GAAGD,QAAQ;MACXN,MAAM,EAAE0B;IACV,CAAC,CAAC;EACJ;;EAGA;EACA,SAASK,kBAAkB,CAACP,CAAC,EAAE;IAC7B,MAAM;MAAER,IAAI;MAAEC;IAAM,CAAC,GAAGO,CAAC,CAACC,MAAM;IAChCV,oBAAoB,CAACC,IAAI,EAAEC,KAAK,CAAC;IACjCV,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACU,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ;;EAEA;EACA,SAASe,YAAY,CAACR,CAAC,EAAE;IACvBA,CAAC,CAACS,cAAc,EAAE;IAClB5B,QAAQ,CAAC;MACP,GAAGC,QAAQ;MACX4B,EAAE,EAAE5C,MAAM,CAAC,CAAC,CAAC;MACb6C,MAAM,EAAE;IACV,CAAC,CAAC;IACF5B,WAAW,CAAC;MACVZ,KAAK,EAAE,EAAE;MACTI,WAAW,EAAE,EAAE;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;EAEA,oBACE;IAAM,SAAS,EAAC,UAAU;IAAC,QAAQ,EAAEgC,YAAa;IAAA,wBAChD;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAO,SAAS,EAAC,aAAa;QAAC,OAAO,EAAC,OAAO;QAAA,UAAC;MAE/C;QAAA;QAAA;QAAA;MAAA,QAAQ,eACR;QACE,SAAS,EAAC,YAAY;QACtB,EAAE,EAAC,OAAO;QACV,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC,MAAM;QACX,QAAQ,EAAED,kBAAmB;QAC7B,KAAK,EAAEzB,QAAQ,CAACX;MAAM;QAAA;QAAA;QAAA;MAAA,QACtB,eACF;QAAG,SAAS,EAAC,aAAa;QAAA,UAAEa,UAAU,CAACb;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7C,eAEN;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAO,SAAS,EAAC,aAAa;QAAC,OAAO,EAAC,aAAa;QAAA,UAAC;MAErD;QAAA;QAAA;QAAA;MAAA,QAAQ,eACR;QACE,SAAS,EAAC,gBAAgB;QAC1B,IAAI,EAAC,GAAG;QACR,EAAE,EAAC,aAAa;QAChB,IAAI,EAAC,aAAa;QAClB,QAAQ,EAAEoC,kBAAmB;QAC7B,KAAK,EAAEzB,QAAQ,CAACP;MAAY;QAAA;QAAA;QAAA;MAAA,QAClB,eACZ;QAAG,SAAS,EAAC,aAAa;QAAA,UAAES,UAAU,CAACT;MAAW;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACnD,eAEN;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAO,SAAS,EAAC,aAAa;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC/C;QAAA,UACGK,OAAO,CAACgC,GAAG,CAAEC,CAAC,iBACb;UAAO,SAAS,EAAC,gBAAgB;UAAA,wBAC/B;YACE,IAAI,EAAC,UAAU;YACf,IAAI,EAAC,QAAQ;YACb,KAAK,EAAEA,CAAE;YACT,QAAQ,EAAEd,oBAAqB;YAC/B,OAAO,EAAEjB,QAAQ,CAACN,MAAM,CAACsC,QAAQ,CAACD,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QACrC,EACDA,CAAC;QAAA,GARmCA,CAAC;UAAA;UAAA;UAAA;QAAA,QAUzC;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAG,SAAS,EAAC,aAAa;QAAA,UAAE7B,UAAU,CAACR;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9C,eAEN;MAAK,SAAS,EAAC,WAAW;MAAA,uBACxB;QACE,SAAS,EAAC,eAAe;QACzB,IAAI,EAAC,QAAQ;QACb,QAAQ,EAAEU,cAAe;QAAA,UAC1B;MAED;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GAlJIP,QAAQ;AAAA,KAARA,QAAQ;AAoJd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}