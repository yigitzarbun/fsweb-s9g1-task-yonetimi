{"ast":null,"code":"var _jsxFileName = \"/Users/yigitzarbun/Desktop/Workintech/sprint_9/s9g1/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskHookForm(props) {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    watch,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n  const {\n    kisiler,\n    handleTaskSubmit\n  } = props;\n  const onSubmit = data => {\n    console.log(data);\n    reset();\n  };\n  console.log(errors);\n  //console.log(watch());\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"taskForm\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"title\",\n        children: \"Ba\\u015Fl\\u0131k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-text\",\n        id: \"title\",\n        name: \"title\",\n        type: \"text\",\n        ...register(\"title\", {\n          required: \"Task başlığı yazmalısınız\",\n          minLength: {\n            value: 3,\n            message: \"Task başlığı en az 3 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.title.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"description\",\n        children: \"A\\xE7\\u0131klama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-textarea\",\n        rows: \"3\",\n        id: \"description\",\n        name: \"description\",\n        ...register(\"description\", {\n          required: \"Task açıklaması yazmalısınız\",\n          minLength: {\n            value: 10,\n            message: \"Task açıklaması en az 10 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), errors.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.description.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"\\u0130nsanlar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: kisiler.map(person => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"people\",\n            value: person,\n            ...register(\"people\", {\n              required: \"Lütfen en az bir kişi seçin\",\n              maxLength: {\n                value: 3,\n                message: \"En fazla 3 kişi seçebilirsiniz\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), person]\n        }, person, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), errors.people && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.people.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        disabled: !isValid,\n        children: \"Kaydet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n/*\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\n\nexport default function App() {\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const onSubmit = data => console.log(data);\n  console.log(errors);\n  \n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input type=\"text\" placeholder=\"First name\" {...register(\"First name\", {required: true, maxLength: 80})} />\n      <input type=\"text\" placeholder=\"Last name\" {...register(\"Last name\", {required: true, maxLength: 100})} />\n      <input type=\"text\" placeholder=\"Email\" {...register(\"Email\", {required: true, pattern: /^\\S+@\\S+$/i})} />\n      <input type=\"tel\" placeholder=\"Mobile number\" {...register(\"Mobile number\", {required: true, minLength: 6, maxLength: 12})} />\n      <select {...register(\"Title\", { required: true })}>\n        <option value=\"Mr\">Mr</option>\n        <option value=\"Mrs\">Mrs</option>\n        <option value=\"Miss\">Miss</option>\n        <option value=\"Dr\">Dr</option>\n      </select>\n\n      <input {...register(\"Developer\", { required: true })} type=\"radio\" value=\"Yes\" />\n      <input {...register(\"Developer\", { required: true })} type=\"radio\" value=\"No\" />\n      <input type=\"checkbox\" placeholder=\"Check\" {...register(\"Check\", {required: true, max: 3, min: 1})} />\n\n      <input type=\"submit\" />\n    </form>\n  );\n}\n*/\n_s(TaskHookForm, \"TGaKNzbWHG2gWZQJQfY8OiXVRV8=\", false, function () {\n  return [useForm];\n});\n_c = TaskHookForm;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["React","useForm","TaskHookForm","props","register","handleSubmit","reset","watch","formState","errors","isValid","mode","kisiler","handleTaskSubmit","onSubmit","data","console","log","required","minLength","value","message","title","description","map","person","maxLength","people"],"sources":["/Users/yigitzarbun/Desktop/Workintech/sprint_9/s9g1/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function TaskHookForm(props) {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    watch,\n    formState: { errors, isValid },\n  } = useForm({ mode: \"onChange\" });\n\n  const { kisiler, handleTaskSubmit } = props;\n\n  const onSubmit = (data) => {\n    console.log(data);\n    reset();\n  };\n  console.log(errors);\n  //console.log(watch());\n  return (\n    <form className=\"taskForm\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"form-line\">\n        <label className=\"input-label\" htmlFor=\"title\">\n          Başlık\n        </label>\n        <input\n          className=\"input-text\"\n          id=\"title\"\n          name=\"title\"\n          type=\"text\"\n          {...register(\"title\", {\n            required: \"Task başlığı yazmalısınız\",\n            minLength: {\n              value: 3,\n              message: \"Task başlığı en az 3 karakter olmalı\",\n            },\n          })}\n        />\n        {errors.title && <p className=\"input-error\">{errors.title.message}</p>}\n      </div>\n\n      <div className=\"form-line\">\n        <label className=\"input-label\" htmlFor=\"description\">\n          Açıklama\n        </label>\n        <textarea\n          className=\"input-textarea\"\n          rows=\"3\"\n          id=\"description\"\n          name=\"description\"\n          {...register(\"description\", {\n            required: \"Task açıklaması yazmalısınız\",\n            minLength: {\n              value: 10,\n              message: \"Task açıklaması en az 10 karakter olmalı\",\n            },\n          })}\n        ></textarea>\n        {errors.description && (\n          <p className=\"input-error\">{errors.description.message}</p>\n        )}\n      </div>\n\n      <div className=\"form-line\">\n        <label className=\"input-label\">İnsanlar</label>\n        <div>\n          {kisiler.map((person) => (\n            <label className=\"input-checkbox\" key={person}>\n              <input\n                type=\"checkbox\"\n                name=\"people\"\n                value={person}\n                {...register(\"people\", {\n                  required: \"Lütfen en az bir kişi seçin\",\n                  maxLength: {\n                    value: 3,\n                    message: \"En fazla 3 kişi seçebilirsiniz\",\n                  },\n                })}\n              />\n              {person}\n            </label>\n          ))}\n        </div>\n        {errors.people && (\n          <p className=\"input-error\">{errors.people.message}</p>\n        )}\n      </div>\n\n      <div className=\"form-line\">\n        <button className=\"submit-button\" type=\"submit\" disabled={!isValid}>\n          Kaydet\n        </button>\n      </div>\n    </form>\n  );\n}\n\n/*\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\n\nexport default function App() {\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const onSubmit = data => console.log(data);\n  console.log(errors);\n  \n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input type=\"text\" placeholder=\"First name\" {...register(\"First name\", {required: true, maxLength: 80})} />\n      <input type=\"text\" placeholder=\"Last name\" {...register(\"Last name\", {required: true, maxLength: 100})} />\n      <input type=\"text\" placeholder=\"Email\" {...register(\"Email\", {required: true, pattern: /^\\S+@\\S+$/i})} />\n      <input type=\"tel\" placeholder=\"Mobile number\" {...register(\"Mobile number\", {required: true, minLength: 6, maxLength: 12})} />\n      <select {...register(\"Title\", { required: true })}>\n        <option value=\"Mr\">Mr</option>\n        <option value=\"Mrs\">Mrs</option>\n        <option value=\"Miss\">Miss</option>\n        <option value=\"Dr\">Dr</option>\n      </select>\n\n      <input {...register(\"Developer\", { required: true })} type=\"radio\" value=\"Yes\" />\n      <input {...register(\"Developer\", { required: true })} type=\"radio\" value=\"No\" />\n      <input type=\"checkbox\" placeholder=\"Check\" {...register(\"Check\", {required: true, max: 3, min: 1})} />\n\n      <input type=\"submit\" />\n    </form>\n  );\n}\n*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}